name: "JF-CLI: Conan"
on:
  push:
    branches: 
      - main
  pull_request:
    branches: [ main ]
# issue_comment triggers this action on each comment on issues and pull requests
  issue_comment:
    types: [created]
  pull_request_target:
    types: [opened, synchronize]
permissions:
  actions: read # for detecting the Github Actions environment.
  id-token: write # for creating OIDC tokens for signing.
  packages: write # for uploading attestations.
  contents: read
  security-events: write # Required for uploading code scanning.
jobs:
  conanPackage:
    name: "Conan Package"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    env:  
      JAVA_PROVIDER: 'corretto'
      JAVA_VERSION: '17'
      JF_RT_URL: https://${{vars.JF_NAME}}.jfrog.io
      RT_REPO_VIRTUAL: "helloworld-conan-virtual"
      RT_REPO_DEV_LOCAL: "helloworld-conan-dev-local"
      EVIDENCE_ARTIFACT_JSON: 'evd-artifact.json'  # ref https://jfrog.com/help/r/jfrog-artifactory-documentation/evidence-setup
      EVIDENCE_PACKAGE_JSON: 'evd-package.json'
      EVIDENCE_BUILD_JSON: 'evd-build.json'
      EVIDENCE_RBv2C_JSON: 'evd-rbv2c.json'
      RBV2_SIGNING_KEY: "${{secrets.RBV2_SIGNING_KEY}}" # ref https://jfrog.com/help/r/jfrog-artifactory-documentation/create-signing-keys-for-release-bundles-v2
      JOB_SUMMARY: false
      JFROG_CLI_LOG_LEVEL: DEBUG # DEBUG, INFO, WARN, ERROR
      BUILD_NAME: "helloworld-conan"
      BUILD_ID: "ga-${{github.run_number}}" # ref: https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
    runs-on: ${{matrix.os}}
    timeout-minutes: 30   # ref  https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#jobsjob_idtimeout-minutes
    steps:
     # https://github.com/marketplace/actions/get-conan
      - name: "Install Conan" 
        id: conan
        run: |
            # Install conan
            curl -sSL https://get.conan.io | python3
            # Verify conan version
            conan --version
            # Verify conan config
            conan config list

      # Use the specific setup-cli branch. Ref https://github.com/marketplace/actions/setup-jfrog-cli
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        id: setup-cli
        env:
          JF_URL: ${{env.JF_RT_URL}}
          JFROG_CLI_RELEASES_REPO: '${{env.JF_RT_URL}}/artifactory/${{env.RT_REPO_MVN_VIRTUAL}}' 
          JFROG_CLI_EXTRACTORS_REMOTE: '${{env.JF_RT_URL}}/artifactory/${{env.RT_REPO_MVN_VIRTUAL}}'
          JF_GIT_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          version: latest  #2.71.0
          oidc-provider-name: ${{vars.JF_OIDC_PROVIDER_NAME}}

      - name: Clone VCS
        uses: actions/checkout@v4 # ref: https://github.com/actions/checkout

      - name: Software version
        run: |
          # JFrog CLI version
          jf --version
          # Ping the server
          jf rt ping
          # Java
          java -version
          # MVN
          mvn -version
          # Docker
          docker -v
          # Python
          python3 -V
          pip3 -V
          # Conan
          conan --version
          # jf config
          jf config show

      - name: list folder
        run: |
          pwd
          cd /home/runner/work/conan-hello-world/conan-hello-world

          pwd
          tree .

      - name: "Docker: prestep-summary"
        run: |
          echo "# :frog: Prestep Summary :pushpin:" >> $GITHUB_STEP_SUMMARY
          echo " " >> $GITHUB_STEP_SUMMARY
          echo " " >> $GITHUB_STEP_SUMMARY
          echo " - Installed JFrog CLI [$(jf --version)](https://jfrog.com/getcli/) " >> $GITHUB_STEP_SUMMARY
          echo "    - $(jf --version) " >> $GITHUB_STEP_SUMMARY
          echo "    - $(mvn -v) " >> $GITHUB_STEP_SUMMARY
          echo "    - $(docker -v) " >> $GITHUB_STEP_SUMMARY
          echo "    - $(python3 -V) " >> $GITHUB_STEP_SUMMARY
          echo "    - $(pip3 -V) " >> $GITHUB_STEP_SUMMARY
          echo "    - $(conan --version) " >> $GITHUB_STEP_SUMMARY
          echo " " >> $GITHUB_STEP_SUMMARY
          echo " " >> $GITHUB_STEP_SUMMARY
          echo " - Variables info" >> $GITHUB_STEP_SUMMARY
          echo "    - ID: ${{env.BUILD_ID}} " >> $GITHUB_STEP_SUMMARY
          echo "    - Build Name: ${{env.BUILD_NAME}} " >> $GITHUB_STEP_SUMMARY
          echo "    - Conan - Virtual repo URL: ${{env.RT_REPO_VIRTUAL}}" >> $GITHUB_STEP_SUMMARY
          echo "    - Conan - Local repo URL: ${{env.RT_REPO_DEV_LOCAL}}" >> $GITHUB_STEP_SUMMARY
          echo " " >> $GITHUB_STEP_SUMMARY
